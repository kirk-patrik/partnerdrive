@function decimal-round($number, $digits: 0, $mode: round) {
    $n: 1;

    // $number must be a number
    @if type-of($number) !=number {
        @warn '#{ $number } is not a number.';
        @return $number;
    }

    // $digits must be a unitless number
    @if type-of($digits) !=number {
        @warn '#{ $digits } is not a number.';
        @return $number;
    } @else if not unitless($digits) {
        @warn '#{ $digits } has a unit.';
        @return $number;
    }

    @if $digits>0 {
        @for $i from 1 through $digits {
            $n: $n * 10;
        }
    }

    @if $mode==round {
        @return math.div(round($number * $n), $n);
    } @else if $mode==ceil {
        @return math.div(ceil($number * $n), $n);
    } @else if $mode==floor {
        @return math.div(floor($number * $n), $n);
    } @else {
        @warn '#{ $mode } is undefined keyword.';
        @return $number;
    }
}

// sm = sp , md = tablet , l = laptop , xl = desktop | pc
$labels: ("sm", "md", "l", "xl", "responsive");

$base: 8.333333;

@each $label in $labels {
    @for $i from 1 through 12 {
        .u-col-#{$label}-#{$i} {
            @if $label== "sm" {
                @include is-sp {
                    @include col-gen($i, $base);
                }
            } @else if $label== "md" {
                @include is-tablet {
                    @include col-gen($i, $base);
                }
            } @else if $label== "l" {
                @include is-laptop {
                    @include col-gen($i, $base);
                }
            } @else if $label== "xl" {
                @include is-pc {
                    @include col-gen($i, $base);
                }
            } @else if $label== "responsive" {
                @include is-responsive {
                    @include col-gen($i, $base);
                }
            }
        }
    }
}
